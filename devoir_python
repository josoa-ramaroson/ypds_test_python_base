'''
###########################""
début EXERCICE 1
##########################

'''




liste = ['lundi','mardi','mercredi',"jeudi",'vendredi','samedi','dimanche']
while True:
    user = input("Saisisez votre jour, ou entrer quitter pour arrêter le programme : ").lower()  
    if user == "quitter": 
        break
    if user in liste[0:3]:
        print("Au travail")
    elif user == liste[-2]:
        print("Chouette c'est vendredi")
    elif user in liste[5::]:
        print("Repo ce weekend")
    else :
        print("Entrée invalide\n")
    print('*'*100)


'''
##############################
fin EXERCICE 1
###############################
'''
'''
###########################""
début EXERCICE 2
##########################

'''
def exchange(x):
    if x == "A":
        return "T"
    elif x == "C":
        return "G"
    elif x == "T":
        return "A"
    elif x == "G":
        return "C"
ADN = ["A","C","G","T","T","A","G","C","T","A","A","C","G"]

ADN_reverse =list(map(exchange,ADN))
print(ADN_reverse)
'''
##############################
fin EXERCICE 2
###############################
'''


'''
##############################
début EXERCICE 3
###############################
'''

note = [14,9,13,15,12]
noteMin = min(note)
noteMax = max(note)
moyenne = sum(note)/len(note)

print("la moyenne {:.2f}".format(moyenne))
if moyenne < 12 and moyenne >= 10:
    print("la mention est passable")
elif moyenne >= 12 and moyenne <14:
    print("la mention est assez bien")
elif moyenne >= 14:
    print("bien")




'''
##############################
fin EXERCICE 3
###############################
'''


'''
##############################
début EXERCICE 4
###############################
'''
a = 0
b = 10
print("la valeur de a")
while a<b:
    print(a)
    a+=1

while b!=0:
    if b%2 != 0:
        print(b)

    b-=1

'''
##############################
fin EXERCICE 4
###############################
'''
'''
##############################
début EXERCICE 5
###############################
'''
pSeuil = 2.3
vSeuil = 7.41

pression = float(input("la pression courrant: "))
volume = float(input("la volume courant: "))

if pression > pSeuil and volume > vSeuil:
    print("arrête immédiat")
elif volume > vSeuil:
    print("Veuillez diminuer la volume de l'enceinte")
elif pression > pSeuil:
    print("Veuillez augmenter la volume de l'enceinte")
else:
    print("tout va bien")

'''
##############################
fin EXERCICE 5
###############################
'''
'''
##############################
début EXERCICE 6
###############################
'''
pairs_inf_50 = []
impairs_sup_50 = []

for i in range(101):
    if i <50:
        if i%2 == 0:
            pairs_inf_50.append(i)
    else:
        if i%2 != 0:
            impairs_sup_50.append(i)
print("pairs  |  impairs")
for i,j in zip(pairs_inf_50,impairs_sup_50):
    print("{}\t{}".format(i,j))
    
'''
##############################
fin EXERCICE 6
###############################
''''''
##############################
début EXERCICE 7
###############################
'''
def composer_de(liste_nombre:list,nombre:int):
    for e in liste_nombre:
        if nombre % e ==0 and nombre != e:
            return True
    return False
nombre_premier = [2]
for i in range(3,101):
    if not composer_de(nombre_premier,i):
        nombre_premier.append(i)
print(nombre_premier)
'''
##############################
fin EXERCICE 7
###############################
''''''
##############################
début EXERCICE 8
###############################
'''
liste = [17, 38, 10, 25, 72]
liste.sort()
print(liste)

liste.append(12)
print(liste)

liste.sort(reverse=True)
print(liste)

print("l'indice de l'élément 17 : {}".format(liste.index(17)))

liste.remove(38)
print(liste)

print(liste[1:3])

print(liste[2::])

print(liste[::])
'''
##############################
fin EXERCICE 
###############################
''''''
##############################
début EXERCICE 9
###############################
'''
def compterMots(chaine:str):
    nbre={}
    liste_car = [*chaine]
    for i in liste_car:
        nbre[i] = 0
    for i in liste_car:
        nbre[i] += 1
    return nbre 

print(compterMots("comment ça va!"))


'''
##############################
fin EXERCICE 9
###############################
''''''
##############################
début EXERCICE 10
###############################
'''
class Vecteur2D:
    def __init__(self,x=0,y=0):
        self.x = x
        self.y = y 
    
    def __str__(self):
        return "({},{})".format(self.x,self.y)
    
    def affichage(self):
        print("l")
    def __add__(self,other):
        return Vecteur2D(self.x+other.x,self.y+other.y)
vec1 = Vecteur2D()
vec2 = Vecteur2D(5,2)
print(vec1)
print("les coordonnées du vec1 ({},{})".format(vec1.x,vec1.y))

vec3 = Vecteur2D(5,6)
vec4 = Vecteur2D(4,5)
print(" vec3 :{}\n vec4 :{}\n vec3+vec4: {}\n".format(vec3,vec4,vec3+vec4))

'''
##############################
fin EXERCICE 10
###############################
'''

